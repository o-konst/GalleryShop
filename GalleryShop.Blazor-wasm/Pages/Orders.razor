@page "/orders"


@using GalleryShop.Models

@inject IOrderService OrderService

<PageTitle>Orders</PageTitle>

<h3>Orders</h3>

@if (orders == null)
{
    <p><em>Loading...</em></p>
}
else if (!orders.Any())
{
    <p>No orders found.</p>
}
else
{
    <FluentPaginator State="@pagination" SummaryTemplate="@template" />

    <FluentDataGrid Items="@orders" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.Id)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Title)" Sortable="true" />
    </FluentDataGrid>

    <FluentPaginator State="@pagination" />

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Id</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    PaginationState pagination = new PaginationState() { ItemsPerPage = 2 };

    private IQueryable<Order>? orders;

    protected override async Task OnInitializedAsync()
    {
        var result = await OrderService.GetAllAsync();
        orders = result!.AsQueryable();

        await pagination.SetTotalItemCountAsync(result!.Count);
    }

    private RenderFragment template = @<span />;
}